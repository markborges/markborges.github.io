<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BC Repositories and BC Ideas Extensions</title>
  
  <subtitle>Your BC Ideas inside a custom extension.</subtitle>
  <link href="http://bcrepositories.com/atom.xml" rel="self"/>
  
  <link href="http://bcrepositories.com/"/>
  <updated>2024-08-29T04:15:51.608Z</updated>
  <id>http://bcrepositories.com/</id>
  
  <author>
    <name>Marcelo Borges</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BC Idea | Enable Unlimited Over-Receipt</title>
    <link href="http://bcrepositories.com/2024/08/29/Enable-Unlimited-Over-Receipt/"/>
    <id>http://bcrepositories.com/2024/08/29/Enable-Unlimited-Over-Receipt/</id>
    <published>2024-08-30T03:22:14.000Z</published>
    <updated>2024-08-29T04:15:51.608Z</updated>
    
    <content type="html"><![CDATA[<p>Today on Yammer, a user reported that the Over-Receipt functionality was rather useless in cases were quantities are very minimal but still prone to over-receipt. For example, if the quantity on the line is 1, but the vendor sends 3, you wouldn‚Äôt be able to cover this scenario with out-of-box Over-Receipt, since the maximum tolerance is 100%.</p><p>That‚Äôs when user <em>Kilian Seizinger</em> mentioned that he had already created a BC Idea to support unlimited Over-Receipt.</p><span id="more"></span><p><a href="https://experience.dynamics.com/ideas/idea/?ideaid=84b30110-fda5-ed11-9ac4-0003ff457106">This idea</a> was not voted a lot since its initial posting on 2&#x2F;6&#x2F;2023 (17 votes), but still, I thought it was a quite valid and straight-forward idea to develop.</p><p>Let‚Äôs review the request:</p><blockquote><p>Right now we are limited to 100% Over-Receipt.</p><p>It would be very helpful, if we can specifiy a Over-Receipt Code for one vendor to accept unlimited Over Receipt.</p><footer><strong>@BCIdeas</strong><cite><a href="https://experience.dynamics.com/ideas/idea/?ideaid=84b30110-fda5-ed11-9ac4-0003ff457106">Enable unlimited Over-Receipt</a></cite></footer></blockquote><p>I started by briefly checking the source code to see what type of restriction was in place that would prevent values above 100%, and thankfully, the restriction was not set directly on the field level. Instead, it was well written up in codeunits that provided subscribers to change this behavior.</p><h3 id="Implementation-Details"><a href="#Implementation-Details" class="headerlink" title="Implementation Details"></a>Implementation Details</h3><p>The initial thought was to just allow users to enter a humongous value on the ‚ÄúOver-Receipt Tolerance %‚Äù, such as 9999‚Ä¶ It‚Äôs a very practical approach, but also it feels a bit lazy, and it doesn‚Äôt follow patterns that you can find in other parts of the system‚Ä¶</p><p>For example, if we take a look at the [p:Approval User Setup] page <a href="https://businesscentral.dynamics.com/?page=663">[icon:open_in_new]</a>, we will see that users have the option of either entering a <strong>Sales Amount Approval Limit</strong> or setting <strong>Unlimited Sales Approval</strong>:</p><p><img src="/PAF/Enable-Unlimited-Over-Receipt/User-Approval-Setup.png"><br><em>Options on the User Approval Setup page</em></p><p>Therefore, I followed this pattern and created the ‚ÄúUnlimited Over-Receipt Tolerance‚Äù field on the [t:Over-Receipt Code] table ([p:Over-Receipt Codes] page <a href="https://businesscentral.dynamics.com/?page=8510">[icon:open_in_new]</a>):</p><p><img src="/PAF/Enable-Unlimited-Over-Receipt/Over-Receipt-Codes.png"><br><em>New Unlimited Over-Receipt Tolerance field</em></p><p>For me to allow this flag to work accordingly, and to also allow values above 100% (but no necessarily unlimited), I subscribed to 2 events:</p><ul><li><p><strong>Table [t:Over-Receipt Code]:[e:OnBeforeCheckMinMaxValue]</strong><a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/d95f870441365db61f6456ed36b2609c3f1c0fad/BaseApp/Source/Base%20Application/Purchases/Document/OverReceiptCode.Table.al#L66">[icon:open_in_new]</a></p><ul><li>This event is triggered at the OnValidate event for the Tolerance % field. This will allow me to enter values above 100%.</li></ul></li><li><p><strong>Codeunit [c:Over-Receipt Mgt.]:[e:OnVerifyOverReceiptQuantityOnAfterCalcShouldCallError]</strong><a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/d95f870441365db61f6456ed36b2609c3f1c0fad/BaseApp/Source/Base%20Application/Purchases/Document/OverReceiptMgt.Codeunit.al#L137">[icon:open_in_new]</a></p><ul><li>This event is triggered when BC already detected that an Over-Receipt is happening. In this case, parameter <strong>ShouldCallError</strong> already contains a value determined by BC if it should error out or not, due to over-receipt exceeding the tolerance. (Thank you so very very much whoever came up with this event, as this is exactly where we would want to catch this verification).</li></ul></li></ul><p>With this, implementing this BC Idea was pretty easy breezy. üç∏</p><h3 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h3><p>To enable this BC Idea, visit the <a href="https://businesscentral.dynamics.com/?page=61500"><em>BC Idea Feature Management</em></a> page and search for the original title on the list. </p><p>Once you enable it, you will find a new setting under [p:Purchase &amp; Payables Setup] <a href="https://businesscentral.dynamics.com/?page=460">[icon:open_in_new]</a> (under FastTab <em>BC Ideas Features</em>):</p><ul><li><strong>Enable Unlimited Over-Receipt</strong><ul><li>This setting will be enabled by default when you activate the feature, and it will allow users to setup a Tolerance % that goes beyond 100%, and they will also be allowed to set an Unlimited Tolerance flag.</li></ul></li></ul><p><img src="/PAF/Enable-Unlimited-Over-Receipt/PP-Setup.png"><br><em>Purchase &amp; Payables Setup page</em></p><p>To disable this, you can either disable the setting on the P&amp;P Setup, or you can disable the BC Idea feature altogether.</p><p>If you need to set permissions on who can enable or disable this feature, you need to restrict this permission on the Purchase &amp; Payables setup.</p><h3 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h3><p>If you do enable this BC Idea, please use it at your own risk. Truthfully there‚Äôs not a lot of risk here but you have to be mindful of any potential conflicts with other existing extensions in your environment. Also, don‚Äôt forget to always try these features in a <strong>Sandbox</strong> environment first, and have users test it before really deploying to Production.</p><h3 id="That‚Äôs-it-üéâ"><a href="#That‚Äôs-it-üéâ" class="headerlink" title="That‚Äôs it! üéâ"></a>That‚Äôs it! üéâ</h3><p>If you liked this idea, this development, or if you have questions or comments about this, don‚Äôt hesitate to react and&#x2F;or post on the discussion below (you will need a GitHub account).</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Today on Yammer, a user reported that the Over-Receipt functionality was rather useless in cases were quantities are very minimal but still prone to over-receipt. For example, if the quantity on the line is 1, but the vendor sends 3, you wouldn‚Äôt be able to cover this scenario with out-of-box Over-Receipt, since the maximum tolerance is 100%.&lt;/p&gt;
&lt;p&gt;That‚Äôs when user &lt;em&gt;Kilian Seizinger&lt;/em&gt; mentioned that he had already created a BC Idea to support unlimited Over-Receipt.&lt;/p&gt;</summary>
    
    
    
    <category term="Implemented Ideas" scheme="http://bcrepositories.com/categories/Implemented-Ideas/"/>
    
    
    <category term="BC Idea" scheme="http://bcrepositories.com/tags/BC-Idea/"/>
    
    <category term="Purchase Order" scheme="http://bcrepositories.com/tags/Purchase-Order/"/>
    
  </entry>
  
  <entry>
    <title>How-To | Create a BC OData Custom Connector in Power Automate (Video)</title>
    <link href="http://bcrepositories.com/2024/08/19/How-To-Create-BC-OData-Custom-Connector-in-Power-Automate/"/>
    <id>http://bcrepositories.com/2024/08/19/How-To-Create-BC-OData-Custom-Connector-in-Power-Automate/</id>
    <published>2024-08-19T12:35:01.000Z</published>
    <updated>2024-08-20T00:05:53.254Z</updated>
    
    <content type="html"><![CDATA[<p>When using Power Automate, have you ever felt that the <a href="https://learn.microsoft.com/en-us/connectors/dynamicssmbsaas/">BC Connector</a> together with the <a href="https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/api-reference/v2.0/">Microsoft API v2 for Business Central</a> does not deliver a lot of tables? Or, have you ever felt that the tables that are provided don‚Äôt have many of the fields that you actually need? üïµÔ∏è‚Äç‚ôÇÔ∏è</p><p>What if you customized a table?‚Ä¶ Have you ever been blocked from actually seeing those fields in Power Automate?</p><p>Well, suffer no more‚Ä¶ <span id="more"></span></p><p>The default <a href="https://learn.microsoft.com/en-us/connectors/dynamicssmbsaas/">BC Connector</a> is great, don‚Äôt get me wrong: it has quite a few features that makes BC integrate seamlessly with Power Automate. However, when it comes to actually accessing data, specially custom data, users are out-of-luck üíî, left only with the option of creating their own custom API‚Ä¶ or so they thought.</p><p>In this video, I‚Äôll be showing you how you can cover some of the default <a href="https://learn.microsoft.com/en-us/connectors/dynamicssmbsaas/">BC Connector</a> shortcomings, by using a <a href="https://learn.microsoft.com/en-us/connectors/custom-connectors/">custom Power Automate connector</a> to access <a href="https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/webservices/odata-web-services">Business Central OData Web Services</a>.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/W0ntRUTxb48?si=acS4eIK4Q-ocPBdr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;When using Power Automate, have you ever felt that the &lt;a href=&quot;https://learn.microsoft.com/en-us/connectors/dynamicssmbsaas/&quot;&gt;BC Connector&lt;/a&gt; together with the &lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/api-reference/v2.0/&quot;&gt;Microsoft API v2 for Business Central&lt;/a&gt; does not deliver a lot of tables? Or, have you ever felt that the tables that are provided don‚Äôt have many of the fields that you actually need? üïµÔ∏è‚Äç‚ôÇÔ∏è&lt;/p&gt;
&lt;p&gt;What if you customized a table?‚Ä¶ Have you ever been blocked from actually seeing those fields in Power Automate?&lt;/p&gt;
&lt;p&gt;Well, suffer no more‚Ä¶</summary>
    
    
    
    <category term="How To" scheme="http://bcrepositories.com/categories/How-To/"/>
    
    <category term="Videos" scheme="http://bcrepositories.com/categories/How-To/Videos/"/>
    
    
    <category term="Power Automate" scheme="http://bcrepositories.com/tags/Power-Automate/"/>
    
    <category term="Connectors" scheme="http://bcrepositories.com/tags/Connectors/"/>
    
    <category term="API" scheme="http://bcrepositories.com/tags/API/"/>
    
    <category term="OData" scheme="http://bcrepositories.com/tags/OData/"/>
    
    <category term="OAuth 2.0" scheme="http://bcrepositories.com/tags/OAuth-2-0/"/>
    
  </entry>
  
  <entry>
    <title>BC Idea | Item Variant Pictures</title>
    <link href="http://bcrepositories.com/2024/08/10/Item-Variant-Pictures/"/>
    <id>http://bcrepositories.com/2024/08/10/Item-Variant-Pictures/</id>
    <published>2024-08-10T22:19:00.000Z</published>
    <updated>2024-08-18T04:27:29.073Z</updated>
    
    <content type="html"><![CDATA[<p>Items can have pictures, so why can‚Äôt Item Variants have pictures? That‚Äôs something one would think when reading  <em>Gary Frostick</em>‚Äòs <a href="https://experience.dynamics.com/ideas/idea/?ideaid=bcd2104e-3b11-ea11-b265-0003ff68a8ad">Idea</a>, that had gathered 67 votes since it was posted back in 11&#x2F;27&#x2F;2019.</p><span id="more"></span><p>Here‚Äôs Gary‚Äôs idea:</p><blockquote><p>Item variants are typically used when there are variations of a product available such as a colour or size. It would be very useful to be able to load a picture specifically for an item variant so when viewing the list the user can see the differences in variants.</p><footer><strong>@BCIdeas</strong><cite><a href="https://experience.dynamics.com/ideas/idea/?ideaid=bcd2104e-3b11-ea11-b265-0003ff68a8ad">Picture on Item Variant Record</a></cite></footer></blockquote><p>And this is true. Even though I don‚Äôt see a lot of customer using Item Variants for all the different reasons, I think this idea would be easy enough to implement to cover for those customers that indeed use Item Variants in their processes.</p><p>I don‚Äôt think there‚Äôs a lot of challenges here, so let‚Äôs just jump into the implementation of this idea. üèÉ‚Äç‚ôÄÔ∏è‚Äç‚û°Ô∏è</p><h3 id="Implementation-Details"><a href="#Implementation-Details" class="headerlink" title="Implementation Details"></a>Implementation Details</h3><p>The very first thing we need to do is to actually create a MediaSet field on the [t:Item Variant] table to hold the actual image. There‚Äôs no mistery here, it was done using a Table Extension.</p><p>The next question is: <em>Where, or How am I going to let the users see and assign pictures to the variants?</em> And this is where we have to stop to think a little more, because we want to provide something functional, but we don‚Äôt want to break Business Central patterns.</p><p>My mind immediately went to showing the picture on a FactBox on the [p:Item Variants] <strong>List</strong> page. But if you check the [p:Item List] or the [p: Customer List] pages, they do <strong>not</strong> provide a <strong>Picture</strong> Factbox‚Ä¶ Why is that?</p><p>The answer is: <strong>Tiles</strong> <a href="https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-lists-as-tiles">[icon:open_in_new]</a>! If you want to see the pictures assigned to Items, you should not be viewing lists as <strong>Lists</strong>, you should be viewing them as either <strong>Tiles</strong> or <strong>Tall Tiles</strong>:<br><img src="/PAF/Item-Variants/Item-Variants-Item-List-Tiles.png"><br><em>Item List displayed as Tiles</em></p><p>Therefore, on my [t:Item Variant] TableExtension, I needed to create a fieldgroup named <strong>Brick</strong>, to hold the fields that I would like displayed as Tiles (including the picture), as documented by Microsoft <a href="https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-lists-as-tiles#customizing-the-tile-view-in-al">[icon:open_in_new]</a>.</p><p>Once that was done, look at what I got:<br><img src="/PAF/Item-Variants/Item-Variants-Tiles.png"><br><em>Some pretty neat and colorful Conference Bundle variants‚Ä¶</em></p><h3 id="What-Else‚Ä¶"><a href="#What-Else‚Ä¶" class="headerlink" title="What Else‚Ä¶"></a>What Else‚Ä¶</h3><p>Well, items can be copied using the [a:Copy Item] action from the ribbon‚Ä¶ Therefore, we cannot forget to handle Item Variant Pictures during the copy process. So, I went ahead and created a new flag on the [a:Copy Item] routine:<br><img src="/PAF/Item-Variants/Item-Variants-Copy-Item.png"></p><p>This new toggle will only be <strong>VISIBLE</strong>, if the <strong>Picture on Item Variants</strong> idea is enabled on the <a href="https://businesscentral.dynamics.com/?page=61500"><em>BC Idea Feature Management</em></a> page.<br>Once visible, this flag will only be <strong>ENABLED</strong>, if the Item Variants toggle is also turned on. Otherwise, the toggle will be disabled.</p><h3 id="Warning-Microsoft-Implementation-‚ö†Ô∏è"><a href="#Warning-Microsoft-Implementation-‚ö†Ô∏è" class="headerlink" title="Warning: Microsoft Implementation ‚ö†Ô∏è"></a>Warning: Microsoft Implementation ‚ö†Ô∏è</h3><p>After I went ahead and did this whole development, I noticed on the BC Idea that Microsoft also opened this one up for Open Source contribution through their Base App Contribution program on GitHub.</p><p>With this, you should be seeing a replacement to this sometime soon in the future. When I detect that this has been implemented in the Base App, I‚Äôll mark this idea as deprecated, since you should prefer to keep your Master Data on official Base App tables and fields whenever available.</p><p>I‚Äôll possibly provide a tool to copy pictures from this idea extension to Microsoft‚Äôs official architecture too‚Ä¶ Let‚Äôs see how that goes.</p><h3 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h3><p>As usual, if you do enable this BC Idea, please use it at your own risk. Truthfully there‚Äôs not a lot of risk here but you have to be mindful of any potential conflicts with other existing extensions in your environment. Also, don‚Äôt forget to always try these features in a Sandbox environment first, and have users test it before really deploying to Production.</p><h3 id="That‚Äôs-it-üéâ"><a href="#That‚Äôs-it-üéâ" class="headerlink" title="That‚Äôs it! üéâ"></a>That‚Äôs it! üéâ</h3><p>If you liked this idea, this development, or if you have questions or comments about this, don‚Äôt hesitate to react and&#x2F;or post on the discussion below (you will need a GitHub account).</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Items can have pictures, so why can‚Äôt Item Variants have pictures? That‚Äôs something one would think when reading  &lt;em&gt;Gary Frostick&lt;/em&gt;‚Äòs &lt;a href=&quot;https://experience.dynamics.com/ideas/idea/?ideaid=bcd2104e-3b11-ea11-b265-0003ff68a8ad&quot;&gt;Idea&lt;/a&gt;, that had gathered 67 votes since it was posted back in 11&amp;#x2F;27&amp;#x2F;2019.&lt;/p&gt;</summary>
    
    
    
    <category term="Implemented Ideas" scheme="http://bcrepositories.com/categories/Implemented-Ideas/"/>
    
    
    <category term="BC Idea" scheme="http://bcrepositories.com/tags/BC-Idea/"/>
    
    <category term="Items" scheme="http://bcrepositories.com/tags/Items/"/>
    
    <category term="Item Variants" scheme="http://bcrepositories.com/tags/Item-Variants/"/>
    
    <category term="Bricks and Tiles" scheme="http://bcrepositories.com/tags/Bricks-and-Tiles/"/>
    
    <category term="Media and MediaSets" scheme="http://bcrepositories.com/tags/Media-and-MediaSets/"/>
    
    <category term="Copy Item" scheme="http://bcrepositories.com/tags/Copy-Item/"/>
    
  </entry>
  
  <entry>
    <title>BC Idea | Prevent Duplicate External Document No.</title>
    <link href="http://bcrepositories.com/2024/08/09/Prevent-Duplicate-External-Document-No/"/>
    <id>http://bcrepositories.com/2024/08/09/Prevent-Duplicate-External-Document-No/</id>
    <published>2024-08-09T06:57:26.000Z</published>
    <updated>2024-08-18T04:27:29.073Z</updated>
    
    <content type="html"><![CDATA[<p>This was the second BC Idea I chose to implement, because I have also seen quite a few customers questioning this, especially former NAV customers that at some point had such a feature.</p><p>At the time of choosing this <a href="https://experience.dynamics.com/ideas/idea/?ideaid=ed7b8328-549c-ea11-8b71-0003ff68c1c1">BC Idea</a>, user <em>Melissa Reichenbacher</em> had collected 105 votes since its original posting back in 5&#x2F;22&#x2F;2020. <span id="more"></span> Let‚Äôs take a look at the request:</p><blockquote><p>Add a notification to alert users during order entry if the External Document No. entered on a new Sales Order already exists in an open Sales Order or posted Sales Invoice.</p><p>This is important to ensure a single customer order is not accidentally entered more than once. An additional enhancement would be the ability to set a default for the whole system with the ability to disable on a customer card.</p><footer><strong>@BCIdeas</strong><cite><a href="https://experience.dynamics.com/ideas/idea/?ideaid=ed7b8328-549c-ea11-8b71-0003ff68c1c1">Notification for duplicate External Documents in Sales</a></cite></footer></blockquote><p>If you also navigate through the comments, you will see how many people actually found this useful and added their own details to how they would like to see this working.</p><h3 id="Challenges-of-the-original-Navision-approach"><a href="#Challenges-of-the-original-Navision-approach" class="headerlink" title="Challenges of the original Navision approach"></a>Challenges of the original Navision approach</h3><p>When looking at this request, and remembering how Navision used to implement this, we definitely need to make improvements to this functionality. In the former days of Navision, if an External Document No. already existed for a customer, you simply could not reuse that External Document No. However, there were certain situations where users really needed to reuse that document No., and most of the times it was because they were just issuing the same invoice again (probably due to some error on the first invoice).</p><p>What happened then, is that users started to slightly manipulate the External Document No. in order to be able to ‚Äúreuse‚Äù the original number: They added blank spaces to the beginning of the number, or they added dots or other symbols to the end of the number. With this, Navision would not recognized those manipulated numbers as existing, and users would be able to post the ‚Äúsame‚Äù External Document Number.</p><p>At the same time that users could reutilize numbers in a creative way, it created other challenges, such as trying to report off of that field.</p><p>I personally wouldn‚Äôt want to implement this the same way, so that we can have some quality over the External Document No‚Ä¶<br>‚è≥</p><h3 id="Implementation-Details-and-Settings"><a href="#Implementation-Details-and-Settings" class="headerlink" title="Implementation Details and Settings"></a>Implementation Details and Settings</h3><p>The way I developed this feature, I created a global setting in the Sales &amp; Receivables Setup with 3 values:<br><img src="/PAF/Prevent-Duplicate-Ext-Doc-No/Prevent-Duplicate-External-Document-No-Settings.png"></p><ul><li><strong>No</strong>: Using the same External Document No. will not be an issue.</li><li><strong>Warning</strong>: If the user enters a duplicate <strong>Ext. Document No.</strong> (based on existing Sales Orders or Posted Sales Invoices), BC will throw a warning message, but it will let the user proceed.</li><li><strong>Error</strong>: If the user enters a repeated <strong>Ext. Document No.</strong> (based on existing Sales Orders or Posted Sales Invoices), BC will throw an error message and the user will not be able to proceed.</li></ul><p>The original poster also commented that it would be great if this setting could be done per customer as well, so I went ahead and added the same field on the Customer Card.</p><p><img src="/PAF/Prevent-Duplicate-Ext-Doc-No/Prevent-Duplicate-External-Document-No-Settings-Customer-Card.png"></p><p>Here, you have 4 options: To use the default value from the Sales &amp; Receivables Setup (and you shall see between parenthesis what is the current default value), and the other 3 possible options (No, Warning and Error).</p><h3 id="Setting-Warning"><a href="#Setting-Warning" class="headerlink" title="Setting: Warning"></a>Setting: Warning</h3><p>When you set BC to give you a warning, if you enter a duplicate Ext. Document Number, you shall see a message like the one below. You will be able to press Ok, and continue to use the same document number:<br><img src="/PAF/Prevent-Duplicate-Ext-Doc-No/PreventDuplicate-Warning.png"></p><h3 id="Setting-Error"><a href="#Setting-Error" class="headerlink" title="Setting: Error"></a>Setting: Error</h3><p>When you set BC to throw an Error, then you shall see a message like the one below, and you won‚Äôt be able to proceed until you enter a new Ext. Document No.:<br><img src="/PAF/Prevent-Duplicate-Ext-Doc-No/PreventDuplicate-Error.png"></p><h3 id="Warning-Microsoft-Implementation-‚ö†Ô∏è"><a href="#Warning-Microsoft-Implementation-‚ö†Ô∏è" class="headerlink" title="Warning: Microsoft Implementation ‚ö†Ô∏è"></a>Warning: Microsoft Implementation ‚ö†Ô∏è</h3><p>Since this idea has been posted, Microsoft has picked it up to be developed through their pilot open source contribution program, and they are coming up with their own implementation of this. As of now, their implementaiton will follow the Notification System pattern, where a blue notification is thrown at the top of the Sales Order document, which will probably suffice for most users. Since I‚Äôve already developed this, I‚Äôm going to leave this implementation available, but you don‚Äôt have to enable it if you prefer to use Microsoft‚Äôs implementation.</p><h3 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h3><p>If you do enable this BC Idea, please use it at your own risk. Truthfully there‚Äôs not a lot of risk here but you have to be mindful of any potential conflicts with other existing extensions in your environment. Also, don‚Äôt forget to always try these features in a Sandbox environment first, and have users test it before really deploying to Production.</p><h3 id="That‚Äôs-it-üéâ"><a href="#That‚Äôs-it-üéâ" class="headerlink" title="That‚Äôs it! üéâ"></a>That‚Äôs it! üéâ</h3><p>If you liked this idea, this development, or if you have questions or comments about this, don‚Äôt hesitate to react and&#x2F;or post on the discussion below (you will need a GitHub account).</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;This was the second BC Idea I chose to implement, because I have also seen quite a few customers questioning this, especially former NAV customers that at some point had such a feature.&lt;/p&gt;
&lt;p&gt;At the time of choosing this &lt;a href=&quot;https://experience.dynamics.com/ideas/idea/?ideaid=ed7b8328-549c-ea11-8b71-0003ff68c1c1&quot;&gt;BC Idea&lt;/a&gt;, user &lt;em&gt;Melissa Reichenbacher&lt;/em&gt; had collected 105 votes since its original posting back in 5&amp;#x2F;22&amp;#x2F;2020.</summary>
    
    
    
    <category term="Implemented Ideas" scheme="http://bcrepositories.com/categories/Implemented-Ideas/"/>
    
    
    <category term="BC Idea" scheme="http://bcrepositories.com/tags/BC-Idea/"/>
    
    <category term="Sales Order" scheme="http://bcrepositories.com/tags/Sales-Order/"/>
    
    <category term="Document Numbers" scheme="http://bcrepositories.com/tags/Document-Numbers/"/>
    
  </entry>
  
  <entry>
    <title>Utility | Check GL Inconsistencies in Business Central</title>
    <link href="http://bcrepositories.com/2024/08/09/Check-GL-Inconsistencies/"/>
    <id>http://bcrepositories.com/2024/08/09/Check-GL-Inconsistencies/</id>
    <published>2024-08-09T04:59:41.000Z</published>
    <updated>2024-08-18T04:27:29.073Z</updated>
    
    <content type="html"><![CDATA[<p>What do you do when you‚Äôre customizing processes that affect one of the most important tables in BC, the [t:G&#x2F;L Entry] table, and you run into the dared <strong><em>CONSISTENT</em></strong> function error? ‚ò†Ô∏è</p><span id="more"></span><p>(Go straight to <a href="/2024/08/09/Check-GL-Inconsistencies/#How-To-Use-this-Utility">Solution</a>!)</p><p>Customizing processes that touch the [t:G&#x2F;L Entry] table is nothing new to Business Central, and a few specialized ISVs (or even Custom Extensions) also go through the same processes. Developers writing such extesions, more often than not, run <em>at least once</em> into this very known Consistent error message:</p><p><img src="/PAF/Check-GL-Inconsistencies/CheckGLInconsistencies-Error.png"></p><p>How to recover from this?</p><h3 id="Original-Solution-from-back-in-the-days‚Ä¶"><a href="#Original-Solution-from-back-in-the-days‚Ä¶" class="headerlink" title="Original Solution from back in the days‚Ä¶"></a>Original Solution from back in the days‚Ä¶</h3><p>Years and years ago, developers had the same issue, and I‚Äôm not sure exactly who came up with this solution, but I have some hints that <a href="https://forum.mibuso.com/discussion/comment/107946">this</a> might have been the original post in good old <a href="https://forum.mibuso.com/">Mibuso Forum</a>.</p><p>User <strong>ara3n</strong> suggested the following: To catch the CONSISTENT Error, we should create a <a href="https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/properties/devenv-singleinstance-property">Single Instance Codeunit</a> that will keep a Temporary table with G&#x2F;L Entries. The first time this Codeunit runs, it will enable the ‚Äútracking‚Äù of G&#x2F;L Entries. The second time it runs, it will show all the G&#x2F;L Entries that have been ‚Äútracked‚Äù so far.</p><p><strong>He modified the base code on Codeunit 12 - Gen. Jnl.-Post Line</strong>, so that if ‚Äútracking‚Äù was enabled, for every [t:G&#x2F;L Entry] that NAV would insert, a duplicate entry would be recorded in the temporary [t:G&#x2F;L Entry] table kept on the Single Instance CU. With this, it was possible to intercept any records being inserted in the [t:G&#x2F;L Entry] table using standard NAV Posting Codeunits.</p><p>If users ran into a CONSISTENT function error message, even though their original transaction was rolled back, <strong>the records in the temporary record were not</strong>. So, in order to try to detect which G&#x2F;L entries were faulty, users would:</p><ul><li>Run the Single Instance CU, from the Object Designer, to enable ‚Äútracking‚Äù</li><li>Run the posting process with issues</li><li>Run into the CONSISTENT function error message</li><li>Run the Single Instance CU again to view the ‚Äúfaulty‚Äù G&#x2F;L Entries</li></ul><p>With this, it was pretty easy to detect what entries had the wrong amounts in it, or, if a full leg was missing from the balances.</p><h3 id="BC-Repositories-Solution"><a href="#BC-Repositories-Solution" class="headerlink" title="BC Repositories Solution"></a>BC Repositories Solution</h3><p>With BC‚Äôs architecture using Event Subscribers, the actual implementation becase a lot easier. I still created a Single Instace Codeunit for the same two original reasons:</p><ul><li>Set Tracking on or off</li><li>Keep the temporary [t:G&#x2F;L Entry] records</li></ul><p>Then, all I needed to do in terms of intercepting CONSISTENT issues, I just subscribed to the [e:OnAfterFinishPosting] event on [c:Gen. Jnl.-Post Line] codeunit. The signature for this event is as follows:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">local procedure &quot;Gen. Jnl.-Post Line_OnAfterFinishPosting&quot;(var GlobalGLEntry: Record &quot;G/L Entry&quot;; var GLRegister: Record &quot;G/L Register&quot;; var IsTransactionConsistent: Boolean; var GenJournalLine: Record &quot;Gen. Journal Line&quot;)</span><br></pre></td></tr></table></figure><p>Among others, we are focused only on the following parameters:</p><ul><li>[e:GlobalGLEntry]: a copy of the [t:G&#x2F;L Entry] table with the new records</li><li>[e:GLRegister]: a copy of the [t:G&#x2F;L Register] table with the new records</li><li>[e:IsTransactionConsistent]: a boolean indicating if the [t:G&#x2F;L Entry] table is balanced or not</li></ul><p>With these parameters available, the only task left is to check if [e:IsTransactionConsistent] is false or not, and then store the faulty [t:G&#x2F;L Entry] records, if the single instance codeunit is set to track consistency issues.</p><h3 id="How-to-Use-this-Utility"><a href="#How-to-Use-this-Utility" class="headerlink" title="How to Use this Utility"></a>How to Use this Utility</h3><p>From the <a href="https://businesscentral.dynamics.com/?page=61501"><strong>BC Repo - Utilities</strong></a> page, search for utility ‚ÄúCheck G&#x2F;L Inconsistencies‚Äù from the list, and hit action [a:Launch]. You will be presented with the following page:</p><p><img src="/PAF/Check-GL-Inconsistencies/CheckGLInconsistencies-Page.png"><br><em>BC Repo - Utilities page</em></p><ul><li>Hit [a:Start Tracking] if you would like to start recording faulty transactions</li><li>Hit [a:Stop Tracking] if you already finished your analysis. <strong>Note:</strong> Tracking will be automatically disabled once your web session dies.</li><li>Hit [a:Refresh Entries] if you recorded transactions already and they‚Äôre not showing on the page yet.</li></ul><p>Use the fields at the bottom of the page to detect if Tracking is enabled or not, as well as to check if the Balances are correct. Most likely, Total Debits and Total Credits will not be matching, and from the G&#x2F;L Entries, you shall find the reason for the unbalance.</p><h3 id="Out-of-Box-Inconsistency-Reports"><a href="#Out-of-Box-Inconsistency-Reports" class="headerlink" title="Out of Box Inconsistency Reports"></a>Out of Box Inconsistency Reports</h3><p>In the past, both VAT calculations and Currency Exchange calculations were prone to triggering the CONSISTENT function error. To this date, it still happens under a few situations, and that‚Äôs mostly due to rounding issues more than anything.</p><p>I don‚Äôt usually run these 2 tasks, but from what I read in the BC source code, there is a function [e:ShowInconsistentEntries] <a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Finance/GeneralLedger/Posting/GenJnlPostLine.Codeunit.al#L273">[icon:open_in_new]</a> that is used by both [r:Adjust Exchange Rates] (<a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Finance/Currency/AdjustExchangeRates.Report.al#L33">Report [icon:open_in_new]</a> and <a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Finance/Currency/ExchRateAdjmtProcess.Codeunit.al#L29">Codeunit [icon:open_in_new]</a>) and [r:Calc. and Post VAT Settlement] <a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Finance/VAT/Reporting/CalcandPostVATSettlement.Report.al#L21C4-L21C5">[icon:open_in_new]</a> processes.</p><br><h3 id="That‚Äôs-it-üéâ"><a href="#That‚Äôs-it-üéâ" class="headerlink" title="That‚Äôs it! üéâ"></a>That‚Äôs it! üéâ</h3><p>If you liked this <strong>BC Repo Utility</strong>, this development, or if you have questions or comments about this, don‚Äôt hesitate to react and&#x2F;or post on the discussion below (you will need a GitHub account).</p><h3 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h3><p>If you use this <strong>BC Repo Utility</strong>, please use it at your own risk. Truthfully there‚Äôs not a lot of risk here but you have to be mindful of any potential conflicts with other existing extensions in your environment. Also, don‚Äôt forget to always try these features in a Sandbox environment first, and have users test it before really deploying to Production.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;What do you do when you‚Äôre customizing processes that affect one of the most important tables in BC, the [t:G&amp;#x2F;L Entry] table, and you run into the dared &lt;strong&gt;&lt;em&gt;CONSISTENT&lt;/em&gt;&lt;/strong&gt; function error? ‚ò†Ô∏è&lt;/p&gt;</summary>
    
    
    
    <category term="Utilities" scheme="http://bcrepositories.com/categories/Utilities/"/>
    
    
    <category term="BC Repo Utility" scheme="http://bcrepositories.com/tags/BC-Repo-Utility/"/>
    
    <category term="G/L Entries" scheme="http://bcrepositories.com/tags/G-L-Entries/"/>
    
    <category term="Developer Tools" scheme="http://bcrepositories.com/tags/Developer-Tools/"/>
    
    <category term="Single Instance Codeunit" scheme="http://bcrepositories.com/tags/Single-Instance-Codeunit/"/>
    
  </entry>
  
  <entry>
    <title>BC Idea | Disable printing for Purchase Order under Pending Approval Status</title>
    <link href="http://bcrepositories.com/2024/08/02/Disable-printing-for-Purchase-Order-under-Pending-Approval-Status/"/>
    <id>http://bcrepositories.com/2024/08/02/Disable-printing-for-Purchase-Order-under-Pending-Approval-Status/</id>
    <published>2024-08-02T20:37:41.000Z</published>
    <updated>2024-08-18T04:27:29.073Z</updated>
    
    <content type="html"><![CDATA[<p>This original <a href="https://experience.dynamics.com/ideas/idea/?ideaid=c8cad776-56b3-e911-b083-0003ff68a4d2">idea</a> posted by user <em>YOKE MAY TANG</em> on 7&#x2F;31&#x2F;2019 collected a total 135 votes at the time of development and I chose this one to be my first development because of its simplicity considering the total vote count.</p><span id="more"></span><p>In the original post, the user requests:</p><blockquote><p>Would like to prevent PO to be printed&#x2F;emailed to vendor while the PO is under Pending Approval.</p><footer><strong>@BCIdeas</strong><cite><a href="https://experience.dynamics.com/ideas/idea/?ideaid=c8cad776-56b3-e911-b083-0003ff68a4d2">Disable printing for Purchase Order under Pending Approval Status</a></cite></footer></blockquote><p>It‚Äôs a simple statement, and it seems to be pretty straight forward, right? But it does have a few caveats to be considered.</p><p>When users told me in the past they would not like BC to behave in a certain way until an approval process has cleared, it was mostly because they didn‚Äôt want users taking a shortcut in the process.</p><p>In this request, if we take it literally, it would be very easy to create a block (maybe an Error message?) to prevent the user from printing the Purchase Order document if Status equals ‚ÄúPending Approval‚Äù. But if you really analyze this further, only blocking this for ‚ÄúPending Approval‚Äù status wouldn‚Äôt make much sense‚Ä¶</p><p>What if the user simply printed the Purchase Document BEFORE requesting an approval? Then this block would be pretty useless, right? ‚åõ</p><br><h3 id="Implementation-Details"><a href="#Implementation-Details" class="headerlink" title="Implementation Details"></a>Implementation Details</h3><p>Having this in mind, what makes more sense, is to actually prevent the printout if the status is <em>not released</em>. This means that even POs with status ‚ÄúPending Prepayment‚Äù will be blocked from printing the Purchase Order document.</p><p>Having established that premise, we now need to then determine, in the code, where will we put this block?</p><p>In some of the comments, one user mentioned that it would be pretty easy to implement this block directly on the report, but I see one problem with that approach: a large majority of the customers customize the [r:Purchase Order] report. Most of them, yes, they reuse the original report as a base, and some of them, might probably be using Report Extensions. What about that small percentage that are developing the [r:Purchase Order] report from scratch, or even migrating those from a previous Business Central version‚Ä¶? Therefore, there‚Äôs a chance that the developer customizing the Purchase Order document will forget to put this block in place, and the whole feature goes down the drain.</p><p>Therefore, I chose to actually subscribe to 3 specific events:</p><ul><li><strong>Table [t:Purchase Header]:[e:OnBeforePrintRecords]</strong><a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Purchases/Document/PurchaseHeader.Table.al#L7214">[icon:open_in_new]</a><ul><li>This one is triggered right before BC tries to print the [r:Purchase Order] report</li></ul></li><li><strong>Table [t:Purchase Header]:[e:OnBeforeSendRecords]</strong><a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Purchases/Document/PurchaseHeader.Table.al#L7209C9-L7209C10">[icon:open_in_new]</a><ul><li>This one is triggered right before BC tries to send the [r:Purchase Order] report by e-mail</li></ul></li><li><strong>Codeunit [c:Document-Print]:[e:OnDoPrintPurchaseHeaderToDocumentAttachmentOnBeforeRunSaveAsDocumentAttachment]</strong><a href="https://github.com/StefanMaron/MSDyn365BC.Code.History/blob/7edfe60e4c08f6b8cf7d672a78c1ecd8a54332b3/BaseApp/Source/Base%20Application/Foundation/Reporting/DocumentPrint.Codeunit.al#L1082">[icon:open_in_new]</a><ul><li>This one is triggered while BC is trying to attach the PO to the PO itself</li></ul></li></ul><p>With this, no matter if you use the standard out-of-box report, or if you use a custom report on the Report Selections, our block will most likely work as expected, when you trigger does actions from the PO Card or the PO List.</p><h3 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h3><p>To enable this BC Idea, visit the <a href="https://businesscentral.dynamics.com/?page=61500"><em>BC Idea Feature Management</em></a> page and search for the original title on the list. </p><p>Once you enable it, you will find a new setting under Purchase &amp; Payables Setup (under FastTab <em>BC Ideas Features</em>):</p><ul><li><strong>Disable Printing Unreleased POs</strong><ul><li>This setting will be enabled by default when you activate the feature, and it will prevent users from printing&#x2F;emailing&#x2F;attaching the PO document, if its status is not released.</li></ul></li></ul><p><img src="/PAF/Disable-Printing/Disable-Printing-PPSetup.png"><br><strong><em>Purchase &amp; Payables Setup</em></strong></p><p>To disable this, you can either disable the setting on the P&amp;P Setup, or you can disable the BC Idea feature altogether.</p><p>If you need to set permissions on who can enable or disable this feature, you need to restrict this permission on the Purchase &amp; Payables setup.</p><h3 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h3><p>If you do enable this BC Idea, please use it at your own risk. Truthfully there‚Äôs not a lot of risk here but you have to be mindful of any potential conflicts with other existing extensions in your environment. Also, don‚Äôt forget to always try these features in a Sandbox environment first, and have users test it before really deploying to Production.</p><h3 id="That‚Äôs-it-üéâ"><a href="#That‚Äôs-it-üéâ" class="headerlink" title="That‚Äôs it! üéâ"></a>That‚Äôs it! üéâ</h3><p>If you liked this idea, this development, or if you have questions or comments about this, don‚Äôt hesitate to react and&#x2F;or post on the discussion below (you will need a GitHub account).</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;This original &lt;a href=&quot;https://experience.dynamics.com/ideas/idea/?ideaid=c8cad776-56b3-e911-b083-0003ff68a4d2&quot;&gt;idea&lt;/a&gt; posted by user &lt;em&gt;YOKE MAY TANG&lt;/em&gt; on 7&amp;#x2F;31&amp;#x2F;2019 collected a total 135 votes at the time of development and I chose this one to be my first development because of its simplicity considering the total vote count.&lt;/p&gt;</summary>
    
    
    
    <category term="Implemented Ideas" scheme="http://bcrepositories.com/categories/Implemented-Ideas/"/>
    
    
    <category term="BC Idea" scheme="http://bcrepositories.com/tags/BC-Idea/"/>
    
    <category term="Purchase Order" scheme="http://bcrepositories.com/tags/Purchase-Order/"/>
    
    <category term="Reports" scheme="http://bcrepositories.com/tags/Reports/"/>
    
  </entry>
  
  <entry>
    <title>Welcome üëã to BC Repositories and BC Ideas Extensions</title>
    <link href="http://bcrepositories.com/2024/08/02/Welcome-to-BC-Repositories-for-BC-Ideas/"/>
    <id>http://bcrepositories.com/2024/08/02/Welcome-to-BC-Repositories-for-BC-Ideas/</id>
    <published>2024-08-02T20:02:23.000Z</published>
    <updated>2024-08-18T04:27:29.073Z</updated>
    
    <content type="html"><![CDATA[<p>I decided to take some of the ideas in the BC Ideas website, and turn them into reality.</p><span id="more"></span><p>In this blog, I‚Äôll be capturing some of the ideas publicly posted on the Business Central Ideas website, and turning them into real extensions for Business Central. For each idea that I develop, I plan on writing a post where I‚Äôll go over the challenges and decision-making thoughts for choosing certain designs, as well as sharing a little bit of the development process.</p><p>You can read a bit more about who I am on the <a href="/About">About</a> page.</p><p>If you would like to download the current version of the <strong>BC Repositories - BC Ideas and Utilities</strong> app, please check the <a href="/Download">Download</a> link, but don‚Äôt forget to visit the <a href="/Disclaimer">Disclaimer</a> section for more details.</p><p>If you‚Äôd like to contact me, please review the links on the <a href="/About#About-the-Author">About</a> page.</p><h3 id="BC-Repo-Utilities-and-Other-Posts"><a href="#BC-Repo-Utilities-and-Other-Posts" class="headerlink" title="BC Repo Utilities and Other Posts"></a>BC Repo Utilities and Other Posts</h3><p>I also plan on posting BC Utilities made for Admin, End Users, Functional and Technical Consultants, for tasks that I see being repeated over and over again in my projects. I‚Äôm also going back to being more active on the social groups for Nav and BC, and whenever I find a topic I‚Äôd like to expand more on, it will probably turn into a post.</p><p>So, just like any blog, there will be a little bit of everything, until it gets its own personality‚Ä¶ or until it fizzles, who knows ü§∑‚Äç‚ôÇÔ∏è.</p><h3 id="Microsoft‚Äôs-Pilot-GitHub-Contribution-to-BC‚Äôs-BaseApp"><a href="#Microsoft‚Äôs-Pilot-GitHub-Contribution-to-BC‚Äôs-BaseApp" class="headerlink" title="Microsoft‚Äôs Pilot GitHub Contribution to BC‚Äôs BaseApp"></a>Microsoft‚Äôs Pilot GitHub Contribution to BC‚Äôs BaseApp</h3><p>Please note that Microsoft currently has their own Pilot program where developers can freely contribute to BC‚Äôs BaseApp, through GitHub interactions.</p><p>This blog is not connected with that initiative. Instead, it will serve as an additional resource for users to see their BC Ideas implemented, until Microsoft pick them up to be part of the official product release.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;I decided to take some of the ideas in the BC Ideas website, and turn them into reality.&lt;/p&gt;</summary>
    
    
    
    <category term="Author Notes" scheme="http://bcrepositories.com/categories/Author-Notes/"/>
    
    
    <category term="Welcome" scheme="http://bcrepositories.com/tags/Welcome/"/>
    
    <category term="Intro" scheme="http://bcrepositories.com/tags/Intro/"/>
    
  </entry>
  
</feed>
